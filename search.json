[{"path":[]},{"path":"https://aviezerl.github.io/babynamesIL/articles/babynamesIL.html","id":"distribution-of-names","dir":"Articles","previous_headings":"Israeli baby names","what":"Distribution of names","title":"Analysis","text":"start looking distribution total number babies name:  Note x axis log scale.","code":"babynamesIL_totals %>%   mutate(sector = factor(sector, levels = c(\"Jewish\", \"Muslim\", \"Christian\", \"Druze\", \"Other\"))) %>%   ggplot(aes(x = total, color = sex)) +   ggsci::scale_color_aaas() +   geom_density() +   scale_x_log10() +   facet_grid(. ~ sector) +   theme(axis.text.x = element_text(angle = 90, hjust = 1))"},{"path":"https://aviezerl.github.io/babynamesIL/articles/babynamesIL.html","id":"top-names","dir":"Articles","previous_headings":"Israeli baby names","what":"Top names","title":"Analysis","text":"Top 20 names sex sector:","code":"babynamesIL_totals %>%   mutate(sector = factor(sector, levels = c(\"Jewish\", \"Muslim\", \"Christian\", \"Druze\", \"Other\"))) %>%   group_by(sector, sex) %>%   slice_max(order_by = total, n = 20) %>%   arrange(sector, sex, desc(total)) %>%   mutate(name = forcats::fct_inorder(name)) %>%   ggplot(aes(x = name, y = total)) +   geom_col() +   facet_wrap(sector ~ sex, scales = \"free\", ncol = 2) +   ylab(\"total #\") +   xlab(\"\") +   theme(axis.text.x = element_text(angle = 90, hjust = 1))"},{"path":[]},{"path":"https://aviezerl.github.io/babynamesIL/articles/babynamesIL.html","id":"a-single-name","dir":"Articles","previous_headings":"Israeli baby names > Names over time","what":"a single name","title":"Analysis","text":"","code":"babynamesIL %>%   tidyr::complete(sector, year, sex, name, fill = list(n = 0, prop = 0)) %>%   filter(name == \"מעיין\", sector == \"Jewish\") %>%   ggplot(aes(x = year, y = prop, color = sex)) +   geom_line() +   ggsci::scale_color_aaas() +   scale_y_continuous(labels = scales::percent) +   ggtitle(\"מעיין הבן מול מעיין הבת\") +   theme_classic()"},{"path":"https://aviezerl.github.io/babynamesIL/articles/babynamesIL.html","id":"clustering","dir":"Articles","previous_headings":"Israeli baby names > Names over time","what":"clustering","title":"Analysis","text":"create matrix names frequencies time. start Jewish female babies. Normalize name: Select names least 500 babies: Cluster: Reorder clustering year: Plot matrix: wrap function: can now plot also Male names: sectors:","code":"names_mat <- babynamesIL %>%   filter(sector == \"Jewish\", sex == \"F\") %>%   select(year, name, prop) %>%   spread(year, prop, fill = 0) %>%   column_to_rownames(\"name\") %>%   as.matrix() dim(names_mat) #> [1] 1478   74 mat_norm <- names_mat / rowSums(names_mat) mat_norm_f <- mat_norm[babynamesIL_totals %>%   filter(sector == \"Jewish\", sex == \"F\") %>%   filter(total >= 500) %>%   pull(name), ] dim(mat_norm_f) #> [1] 485  74 hc <- tgs_cor(t(mat_norm_f)) %>%   tgs_dist() %>%   hclust(method = \"ward.D2\") hc <- as.hclust(reorder(   as.dendrogram(hc),   apply(mat_norm_f, 1, which.max),   agglo.FUN = mean )) text_mat <- babynamesIL %>%   filter(sector == \"Jewish\", sex == \"F\") %>%   tidyr::complete(sector, year, sex, name, fill = list(n = 0)) %>%   mutate(text = paste(name, paste0(\"year: \", year), paste0(\"n: \", n), sep = \"\\n\")) %>%   select(year, name, text) %>%   spread(year, text) %>%   column_to_rownames(\"name\") %>%   as.matrix() plotly::plot_ly(z = mat_norm_f[hc$order, ], y = rownames(mat_norm_f)[hc$order], x = colnames(mat_norm_f), type = \"heatmap\", colors = colorRampPalette(c(\"white\", \"blue\", \"red\", \"yellow\"))(1000), hoverinfo = \"text\", text = text_mat[hc$order, ]) %>%   plotly::layout(yaxis = list(title = \"\"), xaxis = list(title = \"Year\")) cluster_names <- function(sector, sex, min_total = 500, colors = colorRampPalette(c                           (\"white\", \"blue\", \"red\", \"yellow\"))(1000)) {   names_mat <- babynamesIL %>%     filter(sector == !!sector, sex == !!sex) %>%     select(year, name, prop) %>%     spread(year, prop, fill = 0) %>%     column_to_rownames(\"name\") %>%     as.matrix()   text_mat <- babynamesIL %>%     filter(sector == !!sector, sex == !!sex) %>%     tidyr::complete(sector, year, sex, name, fill = list(n = 0)) %>%     mutate(text = paste(name, paste0(\"year: \", year), paste0(\"n: \", n), sep = \"\\n\")) %>%     select(year, name, text) %>%     spread(year, text) %>%     column_to_rownames(\"name\") %>%     as.matrix()   mat_norm <- names_mat / rowSums(names_mat)   mat_norm_f <- mat_norm[babynamesIL_totals %>%     filter(sector == !!sector, sex == !!sex) %>%     filter(total >= min_total) %>%     pull(name), ]   text_mat <- text_mat[rownames(mat_norm_f), colnames(mat_norm_f)]   hc <- tgs_cor(t(mat_norm_f)) %>%     tgs_dist() %>%     hclust(method = \"ward.D2\")   hc <- as.hclust(reorder(     as.dendrogram(hc),     apply(mat_norm_f, 1, which.max),     agglo.FUN = mean   ))   plotly::plot_ly(z = mat_norm_f[hc$order, ], y = rownames(mat_norm_f)[hc$order], x = colnames(mat_norm_f), type = \"heatmap\", colors = colors, hoverinfo = \"text\", text = text_mat[hc$order, ]) %>%     plotly::layout(yaxis = list(title = \"\"), xaxis = list(title = \"Year\")) } cluster_names(\"Jewish\", \"M\") cluster_names(\"Muslim\", \"M\") cluster_names(\"Muslim\", \"F\") cluster_names(\"Christian\", \"M\", 50) cluster_names(\"Christian\", \"F\", 50) cluster_names(\"Druze\", \"M\", 50) cluster_names(\"Druze\", \"F\", 50) cluster_names(\"Other\", \"M\", 50) cluster_names(\"Other\", \"F\", 50)"},{"path":"https://aviezerl.github.io/babynamesIL/articles/babynamesIL.html","id":"unisex-names","dir":"Articles","previous_headings":"Israeli baby names","what":"Unisex names","title":"Analysis","text":"can plot names used male female given year, e.g. 2021:  can use matrices created find patterns ratio male female time: Run function - red male names blue female names:","code":"babynamesIL %>%   filter(sector == \"Jewish\", year == 2021) %>%   pivot_wider(names_from = \"sex\", values_from = c(\"n\", \"prop\"), values_fill = 0) %>%   filter(n_M > 0 & n_F > 0) %>%   ggplot(aes(x = n_M, y = n_F, label = name)) +   geom_point() +   scale_x_log10() +   scale_y_log10() +   ggrepel::geom_text_repel() +   geom_abline() cluster_unisex_names <- function(sector, colors = colorRampPalette(c(\"blue\", \"white\", \"red\"))(1000), epsilon = 1e-3) {   mat_M <- babynamesIL %>%         filter(sector == !!sector, sex == \"M\") %>%         tidyr::complete(sector, year, sex, name, fill = list(n = 0, prop = 0)) %>%      select(year, name, prop) %>%     spread(year, prop, fill = 0) %>%     column_to_rownames(\"name\") %>%     as.matrix()   mat_F <- babynamesIL %>%     filter(sector == !!sector, sex == \"F\") %>%     tidyr::complete(sector, year, sex, name, fill = list(n = 0, prop = 0)) %>%      select(year, name, prop) %>%     spread(year, prop, fill = 0) %>%     column_to_rownames(\"name\") %>%     as.matrix()   uni_names <- intersect(rownames(mat_M), rownames(mat_F))   ratio_mat <- log2(mat_M[uni_names, ] + epsilon) - log2(mat_F[uni_names, ] + epsilon)   text_mat <- babynamesIL %>%     filter(sector == !!sector) %>%     tidyr::complete(sector, year, sex, name, fill = list(n = 0, prop = 0)) %>%     pivot_wider(names_from = \"sex\", values_from = c(\"n\", \"prop\"), values_fill = 0) %>%     mutate(       text =         paste(name,           paste0(\"year: \", year),           paste0(\"# of male: \", n_M),           paste0(\"# of female: \", n_F),           paste0(\"% of male: \", scales::percent(prop_M)),           paste0(\"% of female: \", scales::percent(prop_F)),           sep = \"\\n\"         )     ) %>%     select(year, name, text) %>%     spread(year, text) %>%     column_to_rownames(\"name\") %>%     as.matrix()   text_mat <- text_mat[rownames(ratio_mat), colnames(ratio_mat)]   colors <- colorRampPalette(c(\"blue\", \"white\", \"red\"))(1000)   hc <- tgs_cor(t(ratio_mat)) %>%     tgs_dist() %>%     hclust(method = \"ward.D2\")   hc <- as.hclust(reorder(     as.dendrogram(hc),     apply(ratio_mat, 1, which.max),     agglo.FUN = mean   ))   n_names <- length(uni_names)   plotly::plot_ly(z = ratio_mat[hc$order, ], y = rownames(ratio_mat)[hc$order], x = colnames(ratio_mat), type = \"heatmap\", colors = colors, hoverinfo = \"text\", text = text_mat[hc$order, ]) %>%     plotly::layout(title = paste0(n_names, \" unisex names from the \", sector, \" sector\"), yaxis = list(title = \"\"), xaxis = list(title = \"Year\")) } cluster_unisex_names(\"Jewish\") cluster_unisex_names(\"Muslim\") cluster_unisex_names(\"Christian\") cluster_unisex_names(\"Druze\")"},{"path":"https://aviezerl.github.io/babynamesIL/articles/babynamesIL.html","id":"names-that-are-growing-in-a-short-period-of-time","dir":"Articles","previous_headings":"Israeli baby names","what":"Names that are growing in a short period of time","title":"Analysis","text":"can look names growing popularity short period time, e.g. single year. Plot:","code":"growth_names <- babynamesIL %>%         arrange(sector, sex, name, year) %>%         filter(lead(n) >= 100) %>% # take only names with at least 100 babies         group_by(sector, name, sex) %>%         mutate(next_n = lead(n), growth = next_n / n) %>%         ungroup() %>%                 filter(growth >= 2) %>%          arrange(desc(growth)) head(growth_names)  #> # A tibble: 6 × 8 #>   sector  year sex   name       n     prop next_n growth #>   <chr>  <dbl> <chr> <chr>  <int>    <dbl>  <int>  <dbl> #> 1 Muslim  1974 M     וסאם      21 0.00286     329  15.7  #> 2 Muslim  2008 F     גינא      21 0.00144     215  10.2  #> 3 Jewish  2002 F     אגם       17 0.000390    172  10.1  #> 4 Jewish  1980 F     סיון     100 0.00312     954   9.54 #> 5 Muslim  1986 F     רהאם      21 0.00284     200   9.52 #> 6 Jewish  1985 M     אליאור    24 0.000659    219   9.12 nrow(growth_names) #> [1] 120 growth_names %>%         filter(sector == \"Jewish\") %>%         rename(`Number of babies` = next_n) %>%         ggplot(aes(x=year + 1, y=growth, size = `Number of babies`, label = name, color = sex)) +             geom_point() +             theme_classic() +             tgutil::scale_y_log2() +             ggsci::scale_color_aaas() +             ggrepel::geom_text_repel(size = 6) +             scale_x_continuous(breaks = seq(1948, 2021, 5)) +             xlab(\"Year\") +             ylab(\"Growth\") #> Warning: ggrepel: 1 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps"},{"path":"https://aviezerl.github.io/babynamesIL/articles/babynamesIL.html","id":"declining-names","dir":"Articles","previous_headings":"Israeli baby names","what":"Declining names","title":"Analysis","text":"can look names declined : Plot:","code":"decline_names_overall <- babynamesIL %>%         arrange(sector, sex, name, year) %>%                 group_by(sector, name, sex) %>%         summarise(max_n = max(n), min_n = min(n), max_year = year[which.max(n)], min_year = year[which.min(n)], decline = 1 - (min_n / max_n)) %>%                 ungroup() %>%                 filter(max_n >= 100, max_year < min_year) %>%                  filter(decline >= 0.95) #> `summarise()` has grouped output by 'sector', 'name'. You can override using #> the `.groups` argument. decline_names_overall  %>%          arrange(decline) #> # A tibble: 72 × 8 #>    sector name  sex   max_n min_n max_year min_year decline #>    <chr>  <chr> <chr> <int> <int>    <dbl>    <dbl>   <dbl> #>  1 Jewish עירית F       100     5     1971     1998   0.95  #>  2 Muslim סמאח  F       120     6     1976     2019   0.95  #>  3 Muslim היא   F       102     5     1993     2014   0.951 #>  4 Muslim ראניה F       102     5     1979     2020   0.951 #>  5 Jewish זיוה  F       103     5     1960     1989   0.951 #>  6 Jewish ורדה  F       105     5     1957     1980   0.952 #>  7 Jewish צליל  F       215    10     1986     2015   0.953 #>  8 Jewish קובי  M       112     5     1981     2007   0.955 #>  9 Jewish עליזה F       226    10     1957     2012   0.956 #> 10 Jewish שמרית F       136     6     1983     1991   0.956 #> # ℹ 62 more rows decline_names_overall %>%      filter(sector == \"Jewish\") %>%          ggplot(aes(x= max_n, y = decline, label = name)) +          geom_point() +         theme_classic() +          ggrepel::geom_text_repel()"},{"path":"https://aviezerl.github.io/babynamesIL/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviezer Lifshitz. Author, maintainer.","code":""},{"path":"https://aviezerl.github.io/babynamesIL/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lifshitz (2023). babynamesIL: Israel Baby Names 1948-2021. R package version 0.0.1, https://github.com/aviezerl/babynamesIL.","code":"@Manual{,   title = {babynamesIL: Israel Baby Names 1948-2021},   author = {Aviezer Lifshitz},   year = {2023},   note = {R package version 0.0.1},   url = {https://github.com/aviezerl/babynamesIL}, }"},{"path":"https://aviezerl.github.io/babynamesIL/index.html","id":"babynamesil","dir":"","previous_headings":"","what":"Israel Baby Names 1948-2021","title":"Israel Baby Names 1948-2021","text":"babynamesIL contains dataset names given Israeli babies years 1948-2021. data downloaded Israeli Bureau Statistics (LAMAS). names used least 5 children least one gender sector (“Jewish”, “Muslim”, “Christian”, “Druze” “”) included. following objects available: babynamesIL: year 1948 2021, number babies sex sector given name. babynamesIL_totals: dataframe total number babies names per sex sector.","code":""},{"path":"https://aviezerl.github.io/babynamesIL/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Israel Baby Names 1948-2021","text":"","code":"# Install the released version from CRAN install.packages(\"babynamesIL\")  # Install the development version from GitHub devtools::install_github(\"aviezerl/babynamesIL\")"},{"path":"https://aviezerl.github.io/babynamesIL/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Israel Baby Names 1948-2021","text":"Add missing values: Plot trajectory names:","code":"library(babynamesIL)  # yearly data head(babynamesIL) #> # A tibble: 6 x 6 #>   sector year sex name   n       prop #> 1 Jewish 1948   F  שרה 326 0.05002302 #> 2 Jewish 1948   F  רחל 323 0.04956268 #> 3 Jewish 1948   F אסתר 263 0.04035599 #> 4 Jewish 1948   F  חנה 247 0.03790087 #> 5 Jewish 1948   F מרים 190 0.02915452 #> 6 Jewish 1948   F  רות 165 0.02531840  # totals per name head(babynamesIL_totals) #> # A tibble: 6 x 4 #>   sector sex name total #> 1 Jewish   F נועה 47398 #> 2 Jewish   F  רחל 46301 #> 3 Jewish   F  יעל 45329 #> 4 Jewish   F  שרה 45059 #> 5 Jewish   F מיכל 44945 #> 6 Jewish   F אסתר 44657 babynamesIL %>%   tidyr::complete(sector, year, sex, name, fill = list(n = 0, prop = 0)) #> # A tibble: 3,133,900 x 6 #>      sector year sex    name n prop #> 1 Christian 1948   F 'ג'ורג' 0    0 #> 2 Christian 1948   F    אאוס 0    0 #> 3 Christian 1948   F     אבא 0    0 #> 4 Christian 1948   F   אבגיל 0    0 #> 5 Christian 1948   F אבטיסאם 0    0 #> 6 Christian 1948   F     אבי 0    0 #> # ... with 3,133,894 more rows library(ggplot2) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union babynamesIL %>%   tidyr::complete(sector, year, sex, name, fill = list(n = 0, prop = 0)) %>%   filter(name == \"מעיין\", sector == \"Jewish\") %>%   ggplot(aes(x = year, y = prop, color = sex)) +     geom_line() +     ggsci::scale_color_aaas() +     scale_y_continuous(labels = scales::percent) +     ggtitle(\"מעיין הבן מול מעיין הבת\") +      theme_classic()"},{"path":"https://aviezerl.github.io/babynamesIL/index.html","id":"source-of-data","dir":"","previous_headings":"","what":"Source of data","title":"Israel Baby Names 1948-2021","text":"Data downloaded : ","code":""},{"path":"https://aviezerl.github.io/babynamesIL/index.html","id":"web-app","dir":"","previous_headings":"","what":"Web App","title":"Israel Baby Names 1948-2021","text":"web app using data available ","code":""},{"path":"https://aviezerl.github.io/babynamesIL/reference/babynamesIL.html","id":null,"dir":"Reference","previous_headings":"","what":"Israeli baby names per year. — babynamesIL","title":"Israeli baby names per year. — babynamesIL","text":"Full baby name data provided Israel's Central Bureau Statistics (LAMAS). names least 5 uses (given year) included. Data separated sectors sex, sectors \"Jewish\", \"Muslim\", \"Christian\", \"Druze\" \"\".","code":""},{"path":"https://aviezerl.github.io/babynamesIL/reference/babynamesIL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Israeli baby names per year. — babynamesIL","text":"","code":"babynamesIL"},{"path":"https://aviezerl.github.io/babynamesIL/reference/babynamesIL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Israeli baby names per year. — babynamesIL","text":"data frame six variables: sector, year, sex, name, n prop (n divided total number babies database).","code":""},{"path":"https://aviezerl.github.io/babynamesIL/reference/babynamesIL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Israeli baby names per year. — babynamesIL","text":"Data downloaded : ","code":""},{"path":"https://aviezerl.github.io/babynamesIL/reference/babynamesIL_totals.html","id":null,"dir":"Reference","previous_headings":"","what":"Israeli baby names total numbers. — babynamesIL_totals","title":"Israeli baby names total numbers. — babynamesIL_totals","text":"Total number babies per name, sector gender years 1948-2021.","code":""},{"path":"https://aviezerl.github.io/babynamesIL/reference/babynamesIL_totals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Israeli baby names total numbers. — babynamesIL_totals","text":"","code":"babynamesIL_totals"},{"path":"https://aviezerl.github.io/babynamesIL/reference/babynamesIL_totals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Israeli baby names total numbers. — babynamesIL_totals","text":"data frame 4 variables: sector, sex, name, n.","code":""},{"path":"https://aviezerl.github.io/babynamesIL/news/index.html","id":"babynamesil-001","dir":"Changelog","previous_headings":"","what":"babynamesIL 0.0.1","title":"babynamesIL 0.0.1","text":"CRAN release: 2022-08-17 Initial release.","code":""}]
